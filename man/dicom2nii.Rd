% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pipeline_convert.R
\name{dicom2nii}
\alias{dicom2nii}
\title{DICOM 2 NII Converter with BIDS Sidecars}
\usage{
dicom2nii(dcm_folder, inpath = NULL, out_filename = "\%f_\%p_\%t_\%s",
  outpath = getwd(), checkLines = F, compressFile = "y",
  bids_sidecar = "y", anon = "y")
}
\arguments{
\item{dcm_folder}{The folder of the DICOM file which should be converted.
This can either be the whole path, or it can be the specific foldername
(with the path in inpath).}

\item{inpath}{Optional: this is the path of the folder which contains the
folder with the DICOM files.  If the full path is specified as dcm_folder,
then this argument should be left.}

\item{out_filename}{Filename of the output file. Preferably without file
extension. Defaults to same as the input filename. Should only be the
filename. Path goes into outpath. Can also be specified in terms of the
dcm2niix guidelines.}

\item{outpath}{Path where the output file should be placed. Defaults to the
working directory.}

\item{checkLines}{hould the system commands be checked (and not run)? Default
FALSE.}

\item{compressFile}{Should the output be compressed as a .nii.gz file?
Default TRUE.}

\item{bids_sidecar}{Should the BIDS sidecar json file be produced. Options
are 'y', 'n' or 'o' (only).}

\item{anon}{Should the BIDS sidecar be anonymised? Options are 'y' or 'n'}
}
\value{
Creates the nii and json files as desired and returns the success
message.
}
\description{
Function to convert DCM to nii, including the BIDS sidecar.  This is a
wrapper for dcm2niix by Chris Rorden.
}
\examples{
dicom2nii(dcm_folder, checkLines = T)
}
\references{
https://github.com/rordenlab/dcm2niix
}
